// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace SpreadsheetCodedUITests
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// Opening and closing using x in corner
        /// </summary>
        public void OpenAndClose()
        {
            #region Variable Declarations
            WinButton uICloseButton = this.UISpreadsheetApplicatiWindow.UISpreadsheetApplicatiTitleBar.UICloseButton;
            #endregion

            // Launch '%USERPROFILE%\Documents\Visual Studio 2013\Projects\PS6(1)\SpreadsheetGUI\bin\Debug\SpreadsheetGUI.exe'
            ApplicationUnderTest uISpreadsheetApplicatiWindow = ApplicationUnderTest.Launch(this.OpenAndCloseParams.UISpreadsheetApplicatiWindowExePath, this.OpenAndCloseParams.UISpreadsheetApplicatiWindowAlternateExePath);

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(15, 9));
        }
        
        #region Properties
        public virtual OpenAndCloseParams OpenAndCloseParams
        {
            get
            {
                if ((this.mOpenAndCloseParams == null))
                {
                    this.mOpenAndCloseParams = new OpenAndCloseParams();
                }
                return this.mOpenAndCloseParams;
            }
        }
        
        public UISpreadsheetApplicatiWindow UISpreadsheetApplicatiWindow
        {
            get
            {
                if ((this.mUISpreadsheetApplicatiWindow == null))
                {
                    this.mUISpreadsheetApplicatiWindow = new UISpreadsheetApplicatiWindow();
                }
                return this.mUISpreadsheetApplicatiWindow;
            }
        }
        #endregion
        
        #region Fields
        private OpenAndCloseParams mOpenAndCloseParams;
        
        private UISpreadsheetApplicatiWindow mUISpreadsheetApplicatiWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'OpenAndClose'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class OpenAndCloseParams
    {
        
        #region Fields
        /// <summary>
        /// Launch '%USERPROFILE%\Documents\Visual Studio 2013\Projects\PS6(1)\SpreadsheetGUI\bin\Debug\SpreadsheetGUI.exe'
        /// </summary>
        public string UISpreadsheetApplicatiWindowExePath = "C:\\Users\\Camille\\Documents\\Visual Studio 2013\\Projects\\PS6(1)\\SpreadsheetGUI\\bin\\" +
            "Debug\\SpreadsheetGUI.exe";
        
        /// <summary>
        /// Launch '%USERPROFILE%\Documents\Visual Studio 2013\Projects\PS6(1)\SpreadsheetGUI\bin\Debug\SpreadsheetGUI.exe'
        /// </summary>
        public string UISpreadsheetApplicatiWindowAlternateExePath = "%USERPROFILE%\\Documents\\Visual Studio 2013\\Projects\\PS6(1)\\SpreadsheetGUI\\bin\\Deb" +
            "ug\\SpreadsheetGUI.exe";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UISpreadsheetApplicatiWindow : WinWindow
    {
        
        public UISpreadsheetApplicatiWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Spreadsheet Application";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Spreadsheet Application");
            #endregion
        }
        
        #region Properties
        public UISpreadsheetApplicatiTitleBar UISpreadsheetApplicatiTitleBar
        {
            get
            {
                if ((this.mUISpreadsheetApplicatiTitleBar == null))
                {
                    this.mUISpreadsheetApplicatiTitleBar = new UISpreadsheetApplicatiTitleBar(this);
                }
                return this.mUISpreadsheetApplicatiTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UISpreadsheetApplicatiTitleBar mUISpreadsheetApplicatiTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UISpreadsheetApplicatiTitleBar : WinTitleBar
    {
        
        public UISpreadsheetApplicatiTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Spreadsheet Application");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Spreadsheet Application");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
}
